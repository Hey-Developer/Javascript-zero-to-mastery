{
    "cSpell.ignoreWords": [
        "a",
        "a's",
        "aaa",
        "abnormal",
        "abort",
        "about",
        "above",
        "accept",
        "access",
        "accountnum",
        "across",
        "action",
        "active",
        "ad",
        "add",
        "addded",
        "added",
        "adding",
        "additional",
        "additionally",
        "adds",
        "adipisci",
        "adipisicing",
        "ae",
        "after",
        "afterbegin",
        "afterend",
        "again",
        "age",
        "ajax",
        "alarm",
        "alert",
        "align",
        "all",
        "allow",
        "allowing",
        "allows",
        "almost",
        "along",
        "alpha",
        "alphabet",
        "already",
        "also",
        "always",
        "american",
        "amet",
        "among",
        "amount",
        "ampm",
        "an",
        "and",
        "angel",
        "angle",
        "anonymous",
        "another",
        "any",
        "anyone",
        "ao",
        "aoh",
        "ap",
        "api",
        "app",
        "append",
        "appends",
        "application",
        "apply",
        "are",
        "argument",
        "aria",
        "arr",
        "array",
        "article",
        "as",
        "asked",
        "asperiores",
        "assign",
        "assigned",
        "associated",
        "async",
        "asynchronous",
        "asynchronously",
        "at",
        "atp",
        "attribute",
        "author",
        "auto",
        "automatically",
        "available",
        "avatar",
        "await",
        "away",
        "b",
        "ba",
        "back",
        "backend",
        "background",
        "bandwidth",
        "bar",
        "based",
        "basically",
        "bcoz",
        "be",
        "beacon",
        "been",
        "before",
        "beforebegin",
        "beforeend",
        "belonging",
        "below",
        "better",
        "between",
        "bg",
        "bh",
        "binary",
        "bird",
        "blob",
        "blocking",
        "bn",
        "bo",
        "body",
        "boolean",
        "boooo",
        "booooed",
        "bootstrap",
        "bootstrapcdn",
        "border",
        "both",
        "bpf",
        "brand",
        "bring",
        "british",
        "browser",
        "browsers",
        "btn",
        "buffer",
        "build",
        "built",
        "bulk",
        "bunch",
        "but",
        "button",
        "bw",
        "by",
        "byte",
        "c",
        "caaaaaaandy",
        "caaandy",
        "caandy",
        "cache",
        "cached",
        "call",
        "callback",
        "called",
        "calling",
        "cambria",
        "can",
        "cancel",
        "cancels",
        "candy",
        "cannot",
        "canvas",
        "card",
        "card's",
        "carrying",
        "cart",
        "case",
        "cases",
        "catch",
        "cause",
        "cdn",
        "center",
        "centre",
        "certain",
        "cfa",
        "change",
        "changes",
        "chapter",
        "character",
        "characters",
        "charset",
        "check",
        "checkbox",
        "checking",
        "child",
        "choose",
        "chosen",
        "chrome",
        "chunk",
        "class",
        "click",
        "clicked",
        "client",
        "clock",
        "close",
        "cndy",
        "cnu",
        "cochin",
        "code",
        "coercion",
        "col",
        "collapse",
        "colons",
        "com",
        "comes",
        "command",
        "commands",
        "commas",
        "commits",
        "commodi",
        "communicate",
        "communication",
        "completed",
        "compulsory",
        "computer",
        "connection",
        "consectetur",
        "consequuntur",
        "console",
        "const",
        "construct",
        "constructor",
        "consumed",
        "cont",
        "contain",
        "contained",
        "container",
        "containing",
        "contains",
        "content",
        "contents",
        "context",
        "control",
        "controller",
        "controls",
        "convenient",
        "conversion",
        "converted",
        "cookie",
        "cookies",
        "cors",
        "could",
        "counting",
        "course",
        "create",
        "created",
        "creates",
        "creating",
        "credential",
        "credentials",
        "cross",
        "crossorigin",
        "css",
        "ctx",
        "cumque",
        "current",
        "currently",
        "custom",
        "d",
        "dark",
        "data",
        "database",
        "date",
        "day",
        "days",
        "decide",
        "default",
        "defaulted",
        "defaults",
        "defining",
        "delete",
        "deletes",
        "delicate",
        "describe",
        "describedby",
        "desired",
        "desk",
        "destroyed",
        "device",
        "df",
        "difference",
        "different",
        "directly",
        "disappear",
        "display",
        "displaying",
        "dist",
        "distinctio",
        "div",
        "dl",
        "do",
        "doctype",
        "doctype html lang en head meta charset utf name viewport content width device initial scale title note taking app link rel stylesheet href https stackpath bootstrapcdn com bootstrap css min integrity sha a it n rp c uk g s ba dl nq ap fm ew aoh wg zl my yx ffc nc pb d k gj sk crossorigin anonymous body nav class navbar expand lg dark bg brand keep notes button toggler type data toggle collapse target supported aria controls expanded false label navigation span icon div id ul mr auto li item active home sr only current form inline input control sm search placeholder btn outline success submit container h welcome to card add p text some quick example build on the and make up bulk of card's primary script src code jquery slim js df xdz ht ph ls sss tpuj zy o gpamo f vy mv bn e ibb uew or xa rkfj cdn jsdelivr net npm popper dist umd q r hvb iy zf joft m jb ha wldlv i io yy z v zz ttm uksd qr vvox mfoo ao og rvu atp jj lku ou xw lr ql uv yj ze ipu tp j bh jki",
        "doctype html lang en head required meta tags charset utf name viewport content width device initial scale shrink to fit no bootstrap css link rel stylesheet href https stackpath bootstrapcdn com min integrity sha a it n rp c uk g s ba dl nq ap fm ew aoh wg zl my yx ffc nc pb d k gj sk crossorigin anonymous title student desk body h sᴛᴜᴅᴇɴᴛ rᴇɢɪꜱᴛʀᴀᴛɪᴏɴ dᴇꜱᴋ hr div class container mx form group label for example input email type text control id st aria describedby help small muted we'll never share your with anyone else select course option value python java script ruby js frameworks fees check radio status done paid unpaid button submit btn outline primary table hover thead dark tr th scope col first last handle optional j query then popper src code jquery slim df xdz ht ph ls sss tpuj zy o gpamo f vy mv bn e ibb uew or xa rkfj cdn jsdelivr net npm dist umd q r hvb iy zf joft m jb ha wldlv i io yy z v zz ttm uksd qr vvox mfoo ao og rvu atp jj lku ou xw lr ql uv yj ze ipu tp bh jki callback",
        "document",
        "doe",
        "does",
        "doesn't",
        "dolor",
        "dom",
        "domain",
        "domains",
        "don",
        "don't",
        "done",
        "dot",
        "down",
        "downgrade",
        "downloading",
        "due",
        "dummy",
        "dy",
        "dynamic",
        "dynamically",
        "e",
        "each",
        "earlier",
        "earth",
        "ease",
        "easily",
        "easy",
        "el",
        "elem",
        "element",
        "elements",
        "elit",
        "else",
        "email",
        "employee",
        "employees",
        "empty",
        "en",
        "ence",
        "encode",
        "encoded",
        "encoding",
        "ending",
        "engine",
        "entire",
        "entries",
        "eos",
        "equivalent",
        "err",
        "error",
        "errors",
        "ethods",
        "even",
        "event",
        "everything",
        "ew",
        "ex",
        "exactly",
        "example",
        "examples",
        "execute",
        "executes",
        "exist",
        "existing",
        "exists",
        "expand",
        "expanded",
        "expect",
        "experience",
        "expiration",
        "expires",
        "explained",
        "explorer",
        "expressions",
        "f",
        "fa",
        "fails",
        "false",
        "family",
        "fast",
        "faster",
        "favor",
        "favour",
        "federated",
        "fees",
        "fetch",
        "fetching",
        "ffc",
        "field",
        "fields",
        "file",
        "files",
        "filesystem",
        "fills",
        "finds",
        "finishes",
        "first",
        "fit",
        "fixed",
        "flag",
        "flipkart",
        "float",
        "flow",
        "fm",
        "fn",
        "follow",
        "followed",
        "following",
        "font",
        "fontawesome",
        "foo",
        "for",
        "forbidden",
        "forgets",
        "form",
        "form data it is just like an array of in which each contain a key and value field the interface provides way to easily construct set pairs representing fields their values can then be sent using xml http request send method uses same format would use if encoding type were multipart you also pass directly url search params constructor want generate query parameters do simple get submission object implementing used for structure instead entries var p my equivalent creates new optional html element when specified will populated with form's current keys name property submitted encode file input content currently empty m ethods append appends onto existing inside or adds does not already exist delete deletes pair from returns iterator allowing go through all contained this first associated given within has boolean stating whether contains certain sets could add cnu specify argument creating prepopulate const user document forms special thing about that network methods such as fetch accept body it’s encoded out sending console log onsubmit async e prevent default let response await php post result json alert message why individually we bunch sake ease working compulsory must have attribute otherwise modify blob third user’s filesystem remove there exists true false there’s syntax difference removes so makes sure only one rest iterate over loop list always allows files are similar usual id elem text john picture image submit script article formdata avatar we’ve seen chapter easy dynamically generated binary g supply parameter practice though often convenient separately but part additional other metadata servers usually more suited rather than raw example submits canvas along some style margin width height border px solid button onclick onmousemove function ctx context d line client x y stroke promise resolve png xhr username groucho accountnum number immediately converted string chosen by userfile java b hey webmasterfile open foo com submitform",
        "form's",
        "format",
        "formats",
        "formdata",
        "forms",
        "found",
        "frameworks",
        "from",
        "fse",
        "fuga",
        "fulfilled",
        "fully",
        "function",
        "functions",
        "fx",
        "g",
        "geeky",
        "geekyshows",
        "generally",
        "generate",
        "generated",
        "georgia",
        "get",
        "gets",
        "getting",
        "ghost",
        "github",
        "given",
        "gj",
        "global",
        "go",
        "goat",
        "goes",
        "got",
        "gpamo",
        "greedy",
        "groucho",
        "group",
        "grunted",
        "h",
        "ha",
        "had",
        "handle",
        "handled",
        "handler",
        "handlers",
        "handling",
        "has",
        "have",
        "he",
        "head",
        "header",
        "headers",
        "height",
        "help",
        "helps",
        "hen",
        "hence",
        "her",
        "here",
        "here we will fetch a locally stored json file dom part let user btn document get element by id users adding action listeners add event listener click defining handlers function const xhr new xml http request open userdata true",
        "hey",
        "his",
        "holds",
        "home",
        "host",
        "hours",
        "hover",
        "how",
        "however",
        "hr",
        "href",
        "ht",
        "html",
        "http",
        "https",
        "hvb",
        "i",
        "ibb",
        "icon",
        "id",
        "ie",
        "if",
        "illo",
        "image",
        "immediately",
        "implemented",
        "implementing",
        "important",
        "in",
        "include",
        "included",
        "includes",
        "indicate",
        "individually",
        "info",
        "information",
        "init",
        "initial",
        "initiate",
        "inline",
        "inner",
        "input",
        "inside",
        "instance",
        "instead",
        "integer",
        "integrity",
        "inter",
        "interact",
        "interaction",
        "interactive",
        "interface",
        "interfaces",
        "interfering",
        "intermediator",
        "internet",
        "into",
        "invented",
        "inventore",
        "io",
        "iphone",
        "ipsum",
        "ipu",
        "is",
        "it",
        "itaque",
        "item",
        "items",
        "iterate",
        "iterator",
        "its",
        "itself",
        "iv",
        "iy",
        "j",
        "java",
        "javascript",
        "jb",
        "jj",
        "jki",
        "jllus",
        "joft",
        "john",
        "jquery",
        "js",
        "jsdelivr",
        "json",
        "just",
        "k",
        "keep",
        "keepalive",
        "key",
        "keys",
        "keystone",
        "label",
        "lang",
        "language",
        "large",
        "last",
        "later",
        "latin",
        "lbl",
        "le",
        "learn",
        "least",
        "leaves",
        "left",
        "length",
        "let",
        "letter",
        "letters",
        "level",
        "lg",
        "li",
        "life",
        "like",
        "limitations",
        "line",
        "link",
        "list",
        "listener",
        "listeners",
        "literal",
        "lku",
        "ll",
        "load",
        "loaded",
        "loading",
        "locally",
        "located",
        "location",
        "log",
        "login",
        "long",
        "looking",
        "loooong",
        "loop",
        "lorem",
        "low",
        "lower",
        "lr",
        "ls",
        "m",
        "machine",
        "made",
        "magni",
        "mainly",
        "maintains",
        "make",
        "makes",
        "making",
        "manipulation",
        "manual",
        "manually",
        "many",
        "margin",
        "mark",
        "match",
        "matches",
        "matching",
        "max",
        "maximum",
        "may",
        "meaning",
        "means",
        "message",
        "meta",
        "metadata",
        "method",
        "methods",
        "mfoo",
        "microsoft",
        "might",
        "min",
        "minimize",
        "minimum",
        "minutes",
        "mixin",
        "mode",
        "modern",
        "modify",
        "mon",
        "more",
        "most",
        "mr",
        "much",
        "multipart",
        "multiple",
        "multiplication",
        "must",
        "muted",
        "mv",
        "mx",
        "my",
        "mynum",
        "mystr",
        "n",
        "name",
        "names",
        "nan",
        "nav",
        "navbar",
        "navigation",
        "navigator",
        "nc",
        "near",
        "necessary",
        "necessitatibus",
        "need",
        "neighbor",
        "neighbour",
        "nemo",
        "nesciunt",
        "net",
        "network",
        "never",
        "new",
        "next",
        "nihil",
        "no",
        "node",
        "non",
        "not",
        "notation",
        "note",
        "notes",
        "nothing",
        "notice",
        "notify",
        "now",
        "npm",
        "nq",
        "number",
        "numbers",
        "numeric",
        "o",
        "object",
        "occurrences",
        "occurs",
        "of",
        "often",
        "og",
        "ok",
        "old",
        "omit",
        "omits",
        "omnis",
        "on",
        "once",
        "onclick",
        "one",
        "ones",
        "onload",
        "only",
        "onmousemove",
        "onsubmit",
        "onto",
        "open",
        "opened",
        "operation",
        "operations",
        "opposed",
        "option",
        "optional",
        "optionally",
        "options",
        "or",
        "origin",
        "original",
        "other",
        "otherwise",
        "ou",
        "our",
        "out",
        "outline",
        "outlive",
        "over",
        "p",
        "page",
        "pages",
        "paid",
        "pair",
        "pairs",
        "para",
        "parameter",
        "parameters",
        "params",
        "parse",
        "parsed",
        "parses",
        "part",
        "parts",
        "party",
        "pass",
        "password",
        "path",
        "pattern",
        "pb",
        "pending",
        "performed",
        "performs",
        "persistent",
        "perspiciatis",
        "ph",
        "php",
        "picture",
        "placeholder",
        "plus",
        "png",
        "policy",
        "polyfilled",
        "popper",
        "populated",
        "porro",
        "portion",
        "positive",
        "possible",
        "post",
        "practice",
        "preceding",
        "prepopulate",
        "presentation",
        "pretty",
        "prevent",
        "preventing",
        "primary",
        "problem",
        "problems",
        "process",
        "processed",
        "processes",
        "program",
        "programming",
        "promise",
        "promises",
        "proper",
        "properties",
        "property",
        "provided",
        "provides",
        "psw",
        "pure",
        "px",
        "python",
        "q",
        "ql",
        "qr",
        "quaerat",
        "quam",
        "quantifier",
        "quantifiers",
        "quas",
        "query",
        "question",
        "qui",
        "quick",
        "quidem",
        "quits",
        "quos",
        "r",
        "radio",
        "ranges",
        "rather",
        "ratione",
        "raw",
        "read",
        "readable",
        "reading",
        "ready",
        "reasonable",
        "reasons",
        "receive",
        "received",
        "receives",
        "recognize",
        "recognizes",
        "redirect",
        "redirects",
        "referrer",
        "refresh",
        "regexp",
        "reiciendis",
        "reject",
        "rejects",
        "rel",
        "related",
        "reload",
        "reloading",
        "rem",
        "remember",
        "remembers",
        "remove",
        "removes",
        "repeated",
        "repellendus",
        "replacement",
        "repos",
        "representation",
        "representing",
        "represents",
        "request",
        "requests",
        "required",
        "resolve",
        "resolved",
        "resolves",
        "resource",
        "resources",
        "resp",
        "responds",
        "response",
        "rest",
        "restapiexample",
        "result",
        "retrieve",
        "return",
        "returned",
        "returning",
        "returns",
        "right",
        "ringtone",
        "rkfj",
        "robust",
        "roman",
        "round",
        "routed",
        "rp",
        "rsz",
        "ruby",
        "rvu",
        "s",
        "sake",
        "salary",
        "same",
        "saved",
        "saves",
        "scale",
        "scope",
        "script",
        "search",
        "second",
        "seconds",
        "secure",
        "security",
        "see",
        "seen",
        "select",
        "selector",
        "selectors",
        "selectors const todo input document query selector add list event listeners listener click functions function preventing form from submitting prevent default structure we want when button is clicked div li done delete creating create element class cont new",
        "semi",
        "semicolons",
        "send",
        "sending",
        "sends",
        "sent",
        "sentence",
        "separated",
        "separately",
        "serif",
        "server",
        "servers",
        "session",
        "set",
        "sets",
        "setted",
        "settings",
        "several",
        "sha",
        "share",
        "she",
        "shoes",
        "shopping",
        "short",
        "should",
        "show",
        "shows",
        "shrink",
        "shut",
        "side",
        "signal",
        "similar",
        "simple",
        "simpler",
        "since",
        "single",
        "sit",
        "site",
        "size",
        "sk",
        "slider",
        "slim",
        "sm",
        "small",
        "smallest",
        "so",
        "solid",
        "solve",
        "some",
        "somewhere",
        "soon",
        "sound",
        "source",
        "spacing",
        "span",
        "spartaaaaaaa",
        "special",
        "specific",
        "specifically",
        "specified",
        "specifies",
        "specify",
        "specifying",
        "sr",
        "src",
        "sss",
        "st",
        "stackpath",
        "stage",
        "stands",
        "start",
        "starting",
        "starts",
        "state",
        "stating",
        "status",
        "statuses",
        "stop",
        "store",
        "stored",
        "stream",
        "stri",
        "strict",
        "string",
        "stringified",
        "stroke",
        "structure",
        "student",
        "style",
        "stylesheet",
        "subdomains",
        "submission",
        "submit",
        "submitform",
        "submits",
        "submitted",
        "submitting",
        "subresource",
        "success",
        "successful",
        "such",
        "suited",
        "supply",
        "supported",
        "supports",
        "sure",
        "switch",
        "synchronous",
        "synchronously",
        "syntax",
        "t",
        "table",
        "tags",
        "takes",
        "taking",
        "target",
        "task",
        "technologies",
        "technology",
        "tempora",
        "tempore",
        "text",
        "th",
        "than",
        "that",
        "the",
        "the fetch method of window or worker global scope mixin starts process fetching a resource from network returning promise which is fulfilled once response available resolves to object representing your request does not reject on http errors it only rejects you must use then handlers check for there are multiple ways send and get information server modern versatile so we’ll start with it’s supported by old browsers can be polyfilled but very well among ones making implemented in interfaces specifically this makes pretty much any context might want resources part browser web api just like set timeout const init url access optional an containing custom settings that apply possible options e g post note origin header requests head headers add contained within literal byte string values some names forbidden body blob buffer source form data search params usv readable stream using cannot have mode cors no same credentials omit include automatically cookies current domain option provided starting chrome property also takes federated credential instance password cache redirect follow redirects error abort if occurs manual handle manually default before defaulted referrer specifying about client empty policy specifies may one when downgrade strict cross unsafe integrity contains subresource value sha bpf bw iv v q j li t fx dy ae jllus rsz h n fse keepalive used allow outlive page flag replacement navigator beacon signal allows communicate desired via controller first argument stringified second will contain looking retrieve do need as javascript expect without simple downloading contents right away returns calling code should result getting usually two stage returned built class soon responds at we status see whether successful don’t yet was unable make problems there’s such site abnormal statuses cause properties ok boolean true let await explained below json else alert additional call provides based methods various formats text read return parse next chapter binary type array low level representation additionally chunk example later https github com repos tutorial en info commits author login pure promises syntax important choose reading we’ve already got won’t work content has been processed consumed parsed fails dom document element id btn all event listener click single todo here i function console log dummy restapiexample employees resp employee html each user name query selector ul inner handling catch err message another task flow program handler execute command inside hen comes fn since asynchronous goes into background pending ence last line now left go back resolved after hence executes file its what async lower case checking val salary age",
        "thead",
        "their",
        "them",
        "theme",
        "then",
        "there",
        "these",
        "they",
        "thing",
        "third",
        "this",
        "though",
        "three",
        "through",
        "till",
        "time",
        "timeout",
        "times",
        "title",
        "tm",
        "to",
        "todo",
        "together",
        "toggle",
        "toggler",
        "tone",
        "totam",
        "tp",
        "tpuj",
        "tr",
        "transfer",
        "treated",
        "tries",
        "true",
        "try",
        "ttm",
        "tut",
        "tutorial",
        "two",
        "txt",
        "type",
        "type conversion console log welcome to tut number string let my var typeof boolean true date new array arr length in means of elements characters methods i stri alpha numeric d nan false parse float fixed coercion mystr mynum",
        "typeof",
        "types",
        "u",
        "uew",
        "ui",
        "uk",
        "uksd",
        "ul",
        "umd",
        "unable",
        "unde",
        "understanding",
        "unique",
        "unknown",
        "unopened",
        "unpaid",
        "unsafe",
        "up",
        "update",
        "updates",
        "url",
        "us",
        "use",
        "used",
        "user",
        "user's",
        "usercart",
        "userdata",
        "userfile",
        "username",
        "users",
        "uses",
        "using",
        "usual",
        "usually",
        "usv",
        "utc",
        "utf",
        "uv",
        "v",
        "val",
        "valid",
        "valuable",
        "value",
        "values",
        "var",
        "variable",
        "various",
        "ve",
        "veniam",
        "vero",
        "versatile",
        "versions",
        "versus",
        "very",
        "via",
        "viewport",
        "visit",
        "visits",
        "vitae",
        "voluptas",
        "voluptatem",
        "vvox",
        "vy",
        "w",
        "want",
        "wants",
        "warbled",
        "was",
        "way",
        "ways",
        "we",
        "we'll",
        "web",
        "webmasterfile",
        "webpage",
        "websites",
        "welcome",
        "well",
        "were",
        "wg",
        "what",
        "what are cookies let you store user information in web pages data stored small text files on your computer when a server has sent page to browser the connection is shut down and forgets everything about were invented solve problem how remember cookie contains as string generally form of name value pair separated by semi colons it maintains state remembers user's among all visits his her can be next time saved pairs like username john doe requests from belonging added request this way gets necessary users work sends then each that treated new different so recognize old we need add with response at client side now whenever automatically due recognizes some examples use flipkart site do shopping items our cart again visit after us show same addded bcoz created he she leaves they which u days third party used minimize load machine hence instead create websites assigned unique id made using access types session set without expires destroyed quits persistent valid till expiration date will delete them java script read document property assign parses adds its list there several parts many optional syntax domain path secure max age seconds note must not contain any whitespace character commas or semicolons ex geeky shoes attribute omits fields fills reasonable defaults for if don't default close cnu console log sets life usercart iphone c utc dark theme mon may specifies specified host portion current location subdomains always included shows com also code but node geekyshows",
        "what are cookies let you store user information in web pages data stored small text files on your computer when a server has sent page to browser the connection is shut down and forgets everything about were invented solve problem how remember cookie contains as string generally form of name value pair separated by semi colons it maintains state remembers user's among all visits his her can be next time saved pairs like username john doe requests from belonging added request this way gets necessary users work sends then each that treated new different so recognize old we need add with response at client side now whenever automatically due recognizes some examples use flipkart site do shopping items our cart again visit after us show same addded bcoz created he she leaves they which u days third party used minimize load machine hence instead create websites assigned unique id made using access types session set without expires destroyed quits persistent valid till expiration date will delete them java script read document property assign parses adds its list there several parts many optional syntax domain path secure max age seconds note must not contain any whitespace character commas or semicolons ex geeky shoes attribute omits fields fills reasonable defaults for if don't default close cnu console log sets usercart iphone c",
        "what is ajax stands for asynchronous javascript and xml not a programming language rather it set of existing technologies helps in fetching data synchronously without interfering with the page no reload refresh modern websites use json instead transfer why allows you to send receive asynchronously reloading web so fast only important information server entire valuable from client side routed makes your application interactive faster better user experience saves network bandwidth very as describe earlier technology but group inter related includes html xhtml css these are used displaying content style mainly presentation dom dynamic display interaction or carrying object notation like short than http request communication between java script bring above together basically engine intermediator how when wants fetch some commands then done task i e initiate that background interact ui blocking now finishes notify hence all backend requests handled by works an event occurs loaded button clicked created sends processes response back read proper action update performed understanding keystone performs following operations receives updates webpage create variable new var xhr access across domains security reasons browsers do allow this means both file tries load must be located on same old versions internet explorer active x microsoft xmlhttp handle ie check if browser supports else window code methods creates abort cancels current get headers returns header specific open method url async psw specifies type post location true false synchronous optional name password string adds label value pair sent properties ready state change called whenever attribute changes represents ranges unopened opened received status available loading downloading text holds operation completed fully number ok forbidden found g we xhttp info txt simpler can most cases however always cached option database sending large amount has size limitations input which contain unknown characters more robust secure",
        "when",
        "whenever",
        "where",
        "whether",
        "which",
        "whitespace",
        "why",
        "width",
        "will",
        "window",
        "with",
        "within",
        "without",
        "wldlv",
        "won",
        "word",
        "work",
        "worker",
        "working",
        "works",
        "would",
        "wrapper",
        "x",
        "xa",
        "xdz",
        "xhr",
        "xhtml",
        "xhttp",
        "xml",
        "xmlhttp",
        "xw",
        "y",
        "yet",
        "yj",
        "you",
        "your",
        "yx",
        "yy",
        "z",
        "ze",
        "zf",
        "zl",
        "zy",
        "zz"
    ]
}